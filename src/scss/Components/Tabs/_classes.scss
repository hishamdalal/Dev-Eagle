@use '../../Library/Colors';
@use '../../Library/Fonts';
@use '../../Library/Breakpoints';

.tabs.tab {
    display: grid;
    grid-auto-flow: row;

    @include Breakpoints.equal-or-more(md){
        grid-template-columns: 1fr 3fr;
    }

    align-content: center;
    //gap: 1rem;

    .titles, .contents {
        display: flex;
        
        //gap: 0.5rem;
        @include Breakpoints.equal-or-more(md){
            flex-direction: column;
        }
    }
    
    .title {
        cursor: pointer;
        border: none;
        padding: .6rem 1rem;
        display: flex;
        align-items: center;
        align-self: stretch;
        z-index: 99;
        
        @include Fonts.size(h6);
        @include Colors.txtBg(dark, gray, $bg-effects:(lighten:4));
        
        @include Colors.replace(border, '1px solid $', ('gray'));
        
        @include Breakpoints.less-than(md){
            border-radius: .3rem .3rem 0 0;
            margin-bottom: -1px;
            @include Colors.replace(border-block-start, '.3rem solid $', (secondary));
        }
        @include Breakpoints.equal-or-more(md){
            //border-radius:  .3rem 0 0 .3rem ;
            border-start-start-radius: .3rem;
            border-end-start-radius: .3rem;

            margin-bottom: 0;
            margin-inline-end: -1px;
            @include Colors.replace(border-inline-start, '.3rem solid $', (secondary));
        }

        &:hover {
            @include Colors.txt(dark);

            @include Breakpoints.less-than(md){
                @include Colors.replace(border-block-start, '.3rem solid $', (accent));
                @include Colors.replace(border-block-end, '1px solid $', (light));
            }
            @include Breakpoints.equal-or-more(md){
                @include Colors.replace(border-inline-start, '.3rem solid $', (accent));
            }
        }
        &:active, &:focus, &.active {
            @include Colors.txtBg(accent, light);

            @include Breakpoints.less-than(md){
                @include Colors.replace(border-block-start, '.3rem solid $', (accent));
                @include Colors.replace(border-block-end, '1px solid $', (light));
                
            }
            @include Breakpoints.equal-or-more(md){
                @include Colors.replace(border-inline-start, '.3rem solid $', (accent));
                @include Colors.replace(border-inline-end, '1px solid $', (light));
            }

        }

        &.active:hover {
            @include Colors.txtBg(accent, light, (darken:3));
            
            @include Breakpoints.less-than(md){
                @include Colors.replace(border-block-start, '.3rem solid $', (accent), (darken:3));
            }
            @include Breakpoints.equal-or-more(md){
                @include Colors.replace(border-inline-start, '.3rem solid $', (accent), (darken:3));
            }
        }
    }

    .content {
        display: none;
        @include Colors.replace(border, '1px solid $', ('gray'));
        padding: 1rem;
    }
    .content.active {
        display: block;
    }
}
