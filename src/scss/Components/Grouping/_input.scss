@use '../../Library/Colors/mixins' as Colors;
@use '../../Settings/borders';

.inputs-group {
    &-v,
    &-h {
        display: flex;
        gap: .5rem 1rem;
    }
}

.inputs-group {
    &-v {
        flex-direction: column;
        justify-content: center;
    }

    &-h {
        flex-direction: row;
        align-items: center;

    }
}

.input-group-item {
    display: inline-flex;
    flex-direction: row;
    gap: 0;
    align-items: stretch;
    
    //@include Colors.bg('gray');
    @include Colors.bg(light);
    @include Colors.border(('gray'), $prop-string:'#{borders.$width} solid $');
    border-radius: .4rem;
    //overflow: hidden;
    
    & > *:first-child {
        border-radius: .4rem 0 0 .4rem;
    }
    & > *:last-child {
        border-radius: 0 .4rem .4rem 0;
    }

    .label, .input {
        border: none;
        //border-radius: 0;

        &:disabled {
            cursor:not-allowed;
            @include Colors.bg(('gray'), (lighten:4));
        }
    }
    .input {
        width: 100%;
    }

    .label {
        display: flex;
        align-items: center;
        
        
        @include Colors.bg(light, (lighten:-1));
        
        &:is([for]) {
            cursor: pointer;
        }
        &:is([type="checkbox"], [type="radio"]) {
            padding-inline: .4rem;
        }

        &:is([type="button"], button){
            cursor: pointer;

            &:hover {
                @include Colors.txtBg(light, primary);
            }
            &:focus {
                @include Colors.txtBg(dark, primary, (), (lighten:-1));
            }
        }
    }
    .dropdown-button {
        cursor: pointer;
        word-break: keep-all;
        @include Colors.bg(light, (lighten:-1));

    }

    &:has(:focus) {
        @include Colors.set(border-color, (primary));
    }
    &>*:not(:first-child) {
        @include Colors.replace(border-inline-start, '#{borders.$width} solid $', ('gray'), (lighten:2));

        // &:focus {
        //     @include Colors.set(border-color, (accent));
            
        // }
    }
    &:has([type="file"]) > .label {
        cursor: pointer;
    }
}



