@use '../../Library/Colors';
@use '../../Settings/buttons' as settings;
@use '../../Library/Spacing';
@use '../../Settings/Options';
@use '../../Library/Fonts/mixins' as Fonts;
//@use '../../Settings/colors' as base-colors;


@if Options.deep-get('components', 'Buttons', 'classes') {

    %btn {
        display: inline-block;
        cursor: pointer;
        border: none;

        //padding: settings.$paddings;
        border-radius: settings.$radius;
        @include Spacing.spacing(padding, $v:.4, $h:.6);
        @include Fonts.size(small);
    }

    .btn {
        @extend %btn;

        //--> .btn .btn-primary
        //&-primary {
        //    @extend %btn;
        //}
        
        //--> .btn.btn-primary
        //&#{&}-primary {

        //}


        // @each $color-name, $color-value in base-colors.$base-colors {
        //     //@warn $color-name, $color-value;

        //     @if $color-name != 'transparent' {

        //         // todo: change hover behavior from settings
        //         &.btn-#{$color-name}:hover, &.btn-#{$color-name}:active {
        //             @include Colors.bg($color-name, (lighten:3) );
        //         }

        //         &.btn-#{$color-name}-outline:hover, &.btn-#{$color-name}-outline:active {
        //             //@include Colors.replace(border, '2px solid $', ($color-name), (lighten:3));
        //             @include Colors.bg($color-name);
        //         }
                
        //         &.btn-#{$color-name} {
        //             @include Colors.bg($color-name);
        //         }
        //         &.btn-#{$color-name}-outline {
        //             @include Colors.replace(border, '2px solid $', ($color-name));
        //         }
        //     }
        // } 
    } 

    
    
}