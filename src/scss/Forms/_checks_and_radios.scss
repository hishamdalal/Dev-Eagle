@use '../Library/Colors/mixins'as Colors;
@use '../Settings/borders';


.checkboxes,
.radios,
.switches {

    &-v,
    &-h {
        display: flex;
        gap: .5rem 1rem;
    }
}

.checkboxes,
.radios,
.switches {
    &-v {
        flex-direction: column;
        justify-content: center;
    }

    &-h {
        flex-direction: row;
        align-items: center;

    }
}

.checkbox-item,
.radio-item,
.switch-item {
    * {
        cursor: pointer;
    }

    display: inline-flex;
    flex-direction: row;
    gap: .5rem;
    align-items: center;
}

input.checkbox,
input.radio {

    height: 1rem;
    width: 1rem;
    appearance: none;
    border: none;
    @include Colors.replace(outline, '#{borders.$width} solid $', ('gray'));
    overflow: hidden;
    line-height: 1;

    &:after {
        content: '';
        font-family: fontAwesome;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: .9rem;
        height: 100%;
        width: 100%;
    }

    &:checked {
        @include Colors.bg(accent, (lighten:3));
        @include Colors.set(outline-color, accent);
        //background-image: url("data:image/svg+xml,%3Csvg viewbox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M 0, 4.5 C 0, 0.8100000000000003 0.8100000000000003, 0 4.5, 0 S 9, 0.8100000000000003 9, 4.5 8.19, 9 4.5, 9 0, 8.19 0, 4.5 ' fill='%23ffb200' transform='rotate(0, 100, 100 ) translate(0 0)'%3E%3C/path%3E%3C/svg%3E");

        &::after {
            content: '\f00c';
            @include Colors.bg(accent);
            @include Colors.txt(light);
        }

        &+label {
            @include Colors.txt(accent, (darken:2));
        }
    }

    &:is(:focus, :hover) {
        @include Colors.set(outline-color, accent, (darken:3));
        //@include Colors.replace(box-shadow, 'inset 0 0 0 .06rem $', (accent), (darken:3));
        // &::after {
        //     @include Colors.bg(accent);
        // }
    }

    &:disabled {
        cursor:not-allowed;
        @include Colors.bg(gray, (lighten:3));
        //@include Colors.set(outline-color,'dark', (lighten:3));

        &:hover {
            @include Colors.set(outline-color, 'dark', (lighten:2));

            //@include Colors.replace(box-shadow, 'inset 0 0 0 .06rem $', (dark), (lighten:3));
            &::after {
                @include Colors.bg(gray);
            }
        }

        &+label {
            @include Colors.txt(gray);
        }
    }

}

input.checkbox {
    border-radius: 0.35rem;
}

input.radio {
    border-radius: 1rem;
}

input.switch {
    height: 1rem;
    width: 2rem;
    appearance: none;
    overflow: hidden;
    line-height: 1;
    padding-inline: .1rem;
    border: none;
    border-radius: .5rem;
    @include Colors.replace(outline, '#{borders.$width} solid $', ('gray'));

    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;


    &::after {
        content: '';
        width: .55rem;
        height: .55rem;
        border-radius: .5rem;
        @include Colors.bg(accent);
    }

    &:checked {
        justify-content: flex-end;
        //@include Colors.replace(outline, '.1rem solid $', (accent), (lighten:3));
        @include Colors.bg(accent);
        @include Colors.set(outline-color, accent);

        &:after {
            @include Colors.bg(light);
        }
        &+label {
            @include Colors.txt(accent, (darken:2));
        }

        // &:is(:hover) {
        //     @include Colors.bg(accent, (darken:2));
        // }
    }

    &:is(:hover, :focus) {
        @include Colors.set(outline-color, accent, (darken:3));
    }

    &:is(:hover) {

        //@include Colors.bg(accent, (lighten:5));
        &:after {
            width: .65rem;
            height: .65rem;
        }
    }

    &:disabled {
        cursor: not-allowed;
        @include Colors.bg(gray, (lighten:3));
        //@include Colors.set(outline-color,'gray', (lighten:3));

        &:hover {
            @include Colors.set(outline-color, 'dark', (lighten:2));
            //@include Colors.replace(box-shadow, 'inset 0 0 0 .06rem $', (dark), (lighten:3));
            @include Colors.bg(gray);

            &::after {
                @include Colors.bg(gray, (darken:3));
            }
        }

        &+label {
            @include Colors.txt(gray);
        }
    }
}

// todo: add checkbox buttons like bootstrap:
// https://getbootstrap.com/docs/5.3/forms/checks-radios/#toggle-buttons